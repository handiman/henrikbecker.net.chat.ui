{"version":3,"file":"cv-chat.js","sourceRoot":"","sources":["../src/cv-chat.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'cv-chat',\r\n  styleUrl: 'cv-chat.css',\r\n  shadow: true\r\n})\r\nexport class CvChat {\r\n  @State() question: string = '';\r\n  @State() answer: string = '';\r\n  @State() confidence: string = '';\r\n  @State() promptGuard: string = '';\r\n  @State() chunks: string[] = [];\r\n  @State() loading: boolean = false;\r\n\r\n  examples = [\r\n    \"What has Henrik done in .NET?\",\r\n    \"Has he worked with automation?\",\r\n    \"What's his philosophy on AI?\"\r\n  ];\r\n\r\n  async handleAsk() {\r\n    if (!this.question.trim()) return;\r\n\r\n    this.loading = true;\r\n    this.answer = '';\r\n    this.confidence = '';\r\n    this.promptGuard = '';\r\n    this.chunks = [];\r\n\r\n    try {\r\n      const response = await fetch('https://henrikbecker.azurewebsites.net/ai/ask', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(this.question)\r\n      });\r\n\r\n      const data = await response.json();\r\n      this.answer = data.answer;\r\n      this.confidence = data.confidence;\r\n      this.promptGuard = data.promptGuard;\r\n      this.chunks = data.chunks;\r\n\r\n      this.logDebug(this.question, data);\r\n    } catch (error) {\r\n      this.answer = error + \" Something went wrong while contacting Henrik's brain.\";\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n\r\n  private logDebug(question: string, data: any) {\r\n    console.groupCollapsed(`ðŸ’¬ ${question}`);\r\n    console.log('ðŸ§© PromptGuard:', data.promptGuard);\r\n    console.log('ðŸ“š Chunks:', data.chunks);\r\n    console.log('ðŸŽ¯ Confidence:', data.confidence);\r\n    console.log('ðŸ§  Response Type:', this.extractResponseType(data.answer));\r\n    console.log('ðŸ§  Original Question:', question);\r\n    console.groupEnd();\r\n  }\r\n\r\n  private extractResponseType(answer: string): string {\r\n    if (answer.includes('Faktabaserat')) return 'Faktabaserat';\r\n    if (answer.includes('Tolkning')) return 'Tolkning';\r\n    if (answer.includes('Kreativ')) return 'Kreativ extrapolering';\r\n    return 'OkÃ¤nt';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div part=\"container\">\r\n        <label htmlFor=\"question\" part=\"label\">Ask Henrik's CV bot anything</label>\r\n        <input\r\n          id=\"question\"\r\n          part=\"input\"\r\n          type=\"text\"\r\n          value={this.question}\r\n          onInput={e => this.question = (e.target as HTMLInputElement).value}\r\n          placeholder=\"Type your question here...\"\r\n        />\r\n        <button part=\"button\" onClick={() => this.handleAsk()} disabled={this.loading}>\r\n          {this.loading ? 'Thinking like Henrikâ€¦' : 'Ask the CV bot'}\r\n        </button>\r\n\r\n        <div part=\"examples\">\r\n          <p part=\"examples-label\">Example questions:</p>\r\n          {this.examples.map(example => (\r\n            <button part=\"example-button\" onClick={() => this.question = example}>\r\n              {example}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {this.answer && (\r\n          <div part=\"response\">\r\n            <p>{this.answer}</p>\r\n            <span part=\"confidence\" class={`confidence ${this.confidence.toLowerCase()}`}>\r\n              {this.confidence}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}"]}